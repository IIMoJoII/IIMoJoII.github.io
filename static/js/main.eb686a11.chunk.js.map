{"version":3,"sources":["App.js","index.js"],"names":["soundBoard","Audio","CirclePart","circleStyle","individualStyle","id","clicked","animate","onClick","className","cn","ControlPanel","handleStart","round","disable","React","useState","levelArr","setLevelArr","handleLevel","startGame","useCallback","disabled","type","checked","onChange","name","value","App","setAnimate","computerSeries","setComputerSeries","humanSeries","setHumanSeries","setRound","getSequences","randomNum","Math","floor","random","prevState","handleClicked","playbackRate","play","newState","setTimeout","useEffect","length","i","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eb686a11.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport cn from 'classnames'\n\n\nconst sound1 = new Audio(\"https://s3.amazonaws.com/freecodecamp/simonSound1.mp3\");\nconst sound2 = new Audio(\"https://s3.amazonaws.com/freecodecamp/simonSound2.mp3\");\nconst sound3 = new Audio(\"https://s3.amazonaws.com/freecodecamp/simonSound3.mp3\");\nconst sound4 = new Audio(\"https://s3.amazonaws.com/freecodecamp/simonSound4.mp3\");\nconst soundBoard = [sound1, sound2, sound3, sound4];\n\n\n\nconst CirclePart  = ({circleStyle, individualStyle, id, clicked, animate}) => {\n  const handleClicked = () => {\n    clicked(id)\n  }\n\n  return(\n      <>\n        <div onClick={handleClicked} className={cn(circleStyle, individualStyle, {'animated': animate})} />\n      </>\n  )\n}\n\n\nconst ControlPanel = ({handleStart, round, disable}) => {\n    const [levelArr, setLevelArr] = React.useState([true, false, false])\n\n    // switch choosen level\n    const handleLevel = (id) => {\n        if(id === 0){\n            setLevelArr([true, false, false])\n        }\n        if(id === 1){\n            setLevelArr([false, true, false])\n        }\n        if(id === 2){\n            setLevelArr([false, false, true])\n        }\n    }\n\n    // set clicked btn and return choosen level\n    const startGame = React.useCallback(\n        () => {\n            handleStart(levelArr)\n        },\n        [levelArr],\n    )\n\n\n  return (\n      <>\n        <div className='control-panel'>\n          <p>Round: {round}</p>\n          <button disabled={disable} onClick={startGame}>START</button>\n\n          <p>Game Options: </p>\n          <div className=\"game-options\">\n            <div>\n                <input\n                    type=\"checkbox\"\n                    checked={levelArr[0]}\n                    onChange={() => handleLevel(0)}\n                    name=\"option2\"\n                    value=\"a2\" />Easy\n            </div>\n            <div>\n                <input\n                    type=\"checkbox\"\n                    checked={levelArr[1]}\n                    onChange={() => handleLevel(1)}\n                    name=\"option2\"\n                    value=\"a2\" />Normal\n            </div>\n            <div>\n                <input\n                    type=\"checkbox\"\n                    checked={levelArr[2]}\n                    onChange={() => handleLevel(2)}\n                    name=\"option2\"\n                    value=\"a2\" />Hard\n            </div>\n          </div>\n\n        </div>\n      </>\n  )\n}\n\n\n\n\nconst App = () => {\n    const [animate, setAnimate] = React.useState([false, false, false, false]); //to animate color with unique id\n    const [computerSeries, setComputerSeries] = React.useState([]) // array of computer random series\n    const [humanSeries, setHumanSeries] = React.useState([]) // array of human series of moves\n    const [round, setRound] = React.useState(0) // amount of rounds\n    const [levelArr, setLevelArr] = React.useState([true, false, false]) // choosen level\n\n    // if button start pressed\n    const handleStart = (levelArr) => {\n        getSequences() // get a random num and play it\n        setLevelArr(levelArr) // set play level\n    }\n\n\n    const getSequences = () => {\n        let randomNum = Math.floor(Math.random() * (4))\n        setComputerSeries(prevState => [...prevState, randomNum]) // set rand num to series\n    };\n\n\n    // if human clicked a color\n    const handleClicked = (id) => {\n        soundBoard[id].playbackRate = 0.8;\n        soundBoard[id].play();\n\n        // animate choosen circle\n        setAnimate(prevState => {\n            const newState = [...prevState]\n            newState[id] = true\n            return newState\n        })\n\n        // set click to player array of clicked circles\n        setHumanSeries(prevState => [...prevState, id])\n\n        setTimeout(function(){  setAnimate(prevState => {\n            const newState = [...prevState]\n            newState[id] = false\n            return newState\n        })\n        }, 400);\n    }\n\n\n    React.useEffect(() => {\n        if(computerSeries.length !== 0){\n            for(let i = 0; i < computerSeries.length; i++){ // play all circles in a queue\n                setTimeout(function () {\n                    soundBoard[computerSeries[i]].playbackRate = 0.8;\n                    soundBoard[computerSeries[i]].play();\n                    setAnimate(prevState => {\n                        const newState = [...prevState]\n                        newState[computerSeries[i]] = true\n                        return newState\n                    });}, levelArr[0] ? 1500*(i+1) : levelArr[1] ? 1000*(i+1) : 400*(i+1));\n                setTimeout(function () {\n                    setAnimate(prevState => {\n                        const newState = [...prevState]\n                        newState[computerSeries[i]] = false\n                        return newState\n                    })\n                }, levelArr[0] ? 1500*(i+2) : levelArr[1] ? 1000*(i+2) : 400*(i+2));\n            }\n        }},\n        [computerSeries]\n    )\n\n\n    React.useEffect(() => {\n\n        if(humanSeries.length !== 0){\n            // set new round if player won\n            if(humanSeries.length === computerSeries.length){\n                setRound(round+1)\n                setHumanSeries([])\n                getSequences()\n\n            }\n\n            // restart game if player lost\n            if(computerSeries[humanSeries.length - 1] !== humanSeries[humanSeries.length - 1]){\n                setRound(0)\n                setComputerSeries([])\n                setComputerSeries([])\n            }\n        }\n        },\n        [humanSeries]\n    )\n\n\n    return (\n      <div className=\"App\">\n        <div className=\"circle-wrap\">\n          <CirclePart\n              key={0}\n              id={0}\n              circleStyle={'circle-part'}\n              individualStyle={'circle-one'}\n              clicked={handleClicked}\n              animate={animate[0]}\n          />\n          <CirclePart\n              key={1}\n              id={1}\n              circleStyle={'circle-part'}\n              individualStyle={'circle-two'}\n              clicked={handleClicked}\n              animate={animate[1]}\n          />\n          <CirclePart\n              key={2}\n              id={2}\n              circleStyle={'circle-part'}\n              individualStyle={'circle-three'}\n              clicked={handleClicked}\n              animate={animate[2]}\n          />\n          <CirclePart\n              key={3}\n              id={3}\n              circleStyle={'circle-part'}\n              individualStyle={'circle-four'}\n              clicked={handleClicked}\n              animate={animate[3]}\n          />\n        </div>\n          <ControlPanel\n              disable={computerSeries.length !== 0}\n              handleStart={handleStart}\n              round={round}\n          />\n      </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}